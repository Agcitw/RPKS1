<Window x:Class="ThirdPartTwo_Elements.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:ThirdPartTwo_Elements.Views"
        xmlns:modelViews="clr-namespace:ThirdPartTwo_Elements.ModelViews"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    
        <Window.Content>
            <TabControl>
                <TabItem Header="SpinnerDialog">
                    
                </TabItem>
                <TabItem Header="DialogHost">
                    <TabItem.DataContext>
                        <modelViews:DialogHostViewModel></modelViews:DialogHostViewModel>
                    </TabItem.DataContext>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <views:DialogHostElement Grid.Row="0" DataContext="{Binding}"/>
                        <StackPanel Grid.Row="1">
                            <TextBlock Text="{Binding DialogHostModel.Radius}"
                                       HorizontalAlignment="Center"></TextBlock>
                            <Button Content="Radius+" Command="{Binding OnRadUp}"></Button>
                            <Button Content="Radius-" Command="{Binding  OnRadDown}"></Button>
                            <TextBlock Text="{Binding DialogHostModel.Transparency}"
                                       HorizontalAlignment="Center"></TextBlock>
                            <Button Content="Transparency+" Command="{Binding OnTrUp}"></Button>
                            <Button Content="Transparency-" Command="{Binding OnTrDown}"></Button>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Spinner">
                    <TabItem.DataContext>
                        <modelViews:SpinnerViewModel />
                    </TabItem.DataContext>
                    <Grid ShowGridLines="True" Background="Azure">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        
                        <views:Spinner Grid.Row="0" Grid.Column="0" DataContext="{Binding}"/>
                        
                        <StackPanel Grid.Row="1" Grid.Column="0">
                            <Button Content="Change Colour"
                                    MaxWidth="200"
                                    Command="{Binding ButtonChangeColour}"
                                    Background="{Binding SpinnerModel.ColourOfDots}"></Button>
                        </StackPanel>
                        <Grid Grid.Row="1" Grid.Column="0" Background="White" MaxWidth="50" MaxHeight="35">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition MaxWidth="20"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                                       Text="{Binding SpinnerModel.SizeOfDots}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <Button Grid.Row="0" Grid.Column="1" Content="+" Command="{Binding ButtonUpClicked}"/>
                            <Button Grid.Row="1" Grid.Column="1" Content="-" Command="{Binding ButtonDownClicked}"/>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Window.Content>
    
</Window>
